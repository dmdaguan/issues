{
  "name": "hasura/issues",
  "tagline": "No project management. Just issues.",
  "body": "### What is hasura/issues?\r\n*hasura/issues* is a simple view that pulls data from github and gitlab repos that helps the entire team understand porgress across the entire project. It also has a few utilities to automatically send out emails, show blocking tasks and extract time spent on a task.\r\n\r\n### Features\r\n1. Project progress\r\n2. List issues for the same milestone across github, gitlab repos\r\n3. Parse issue description to show blocking tasks\r\n4. Automatic progress progress emails for an active milestone\r\n5. Automatic daily report of issues opened and closed in case of no active milestone\r\n\r\n---\r\n\r\n###Annotating issues with metadata\r\n\r\nMetadata about issues (blocking task dependency) and time spent on the issue is extracted from the issue description.\r\n\r\n#####Blocking task\r\nSay, there is an issue on a ``gitlab`` project ``myorg/myrepo`` called ``#8 A big block``.\r\n\r\nSay there is an issue in the same project that depends on the issue above ``#23 Some stuff has to be done before this can be done``. In that case, add the following in the issue description (**not issue comments**) saying: ``needs #8``.\r\n\r\nSay there is an issue in some other project that depends on ``#8 A big block``, add this to the issue description: ``needs gitlab:myorg/myrepo#8``.\r\n\r\n#####Time spent\r\nTo annotate how much time was spend on an issue, add the following to the issue description: ``timespent: 7h`` or ``timespent: 7.5h``.\r\n\r\n### Configuration\r\nhasura/issues is a node service that is deployed per project. All configuration is only via env variables.\r\nHere's a list of env vars, what they mean and how to configure them\r\n\r\n- ``GITLAB``: ``XXXX_YOUR_GITLAB_API_TOKENXXXX``\r\n- ``GITHUB``: ``XXXX_YOUR_GITHUB_API_TOKENXXXX``\r\n- ``DEADLINES``: ``{\"milestone_x\": {\"start\": \"YYYY-MM-DD\", \"end\": \"YYYY-MM-DD\"}, \"milestone_y\"...}``\r\n- ``PROJECTS``:\r\n```\r\n{\r\n  \"gitlab\": [\"group/repo\", \"group2/repo2\"],\r\n  \"github\": [\r\n    {\"name\":\"user/repo\", \"milestones\":{\"milestone_x\": 1, \"milestone_y\": 2}},\r\n    {\"name\": \"user2/repo2\", \"milestones\":{\"milestone_x\": 7, \"milestone_y\": 9}}\r\n]}\r\n```\r\n\r\n- ``USERS``: ``{\"github_username\": \"normalized_username\", \"ramu99\": \"ramu\"}``\r\n- ``PROJECTNAME``: ``My Project``\r\n- ``FROM_NAME``: ``Ramu`` (used for signing off on automated email report)\r\n- ``FROM_EMAIL``: ``ramu@ramu.com`` (used as the reply-to on automated emails)\r\n- ``TO_EMAILS``: ``[\"stakeholder1@gmail.com\", \"dev1@gmail.com\", \"manager@foo.com\", \"ramu@ramu.com\"]`` (JSON array of recipients of automated emails)\r\n- ``EMAIL_CRON``: ``0 0 8 * * *`` (cron schedule, GMT, to send out emails. This is 8AM daily)\r\n- ``EXTERNAL_ENDPOINT``: ``http://issues.mysite.com`` or ``https://app.projectX.hasura-app.io`` (URI where this tracker is publicly accessible, required for screenshot images sent via email)\r\n- ``INTERNAL_ENDPOINT``: ``http://localhost:8080`` or ``http://app.projectX`` (URI where this tracker is accessible for services on the same server)\r\n- ``ACTIVE_MILESTONE``: ``milestone_x`` (if this env var is present, a progress chart will be sent as an email, if this env var is absent, a simple project update with issues closed today & time spent on them will be sent out)\r\n- ``SPARKPOST_KEY``: ``XXXX_YOUR_SPARKPOST_KEY``\r\n\r\nThe container listens on the environment variable: ``8080``\r\n\r\n---\r\n\r\n### Endpoints\r\n\r\n1. ``/milestone/:milestone``\r\n2. ``/email/maintenance`` Will send out issue report email (in case no ``ACTIVE_MILESTONE``)\r\n3. ``/email-screenshot/:milestone`` Will send out milestone progress email\r\n\r\n### Support or Contact\r\nPlease use the (ohmygod) [issue tracker](https://github.com/hasura/issues/issues) to file issues and raise any support requests!\r\n\r\n###To run\r\n```\r\ndocker run [-e all the env vars] hasura/issues:<tag>\r\n```\r\nImages from [docker hub](https://hub.docker.com/r/hasura/issues/tags/)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}